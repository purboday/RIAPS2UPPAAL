process batchscheduler_{{compInfo.template}}(socketlist &sockets, int &socket{% if compInfo.port_args != '' %},{{compInfo.port_args}}{% endif %}) {
int index = 0;
int pos = 0;
void poll(intq & port)
{
   if (port.curr_size > 0)
    {
        sockets.items[pos] = port.id;
        sockets.length ++;
        pos ++;
    }
}
state
    polling,
    L0,
    L1,
    L2;
commit
    L0,
    L1;
init
    polling;
trans
    L2 -> L0 { guard index < sockets.length; sync handlerexit?; },
    L2 -> polling { guard index >= sockets.length; sync handlerexit?; assign index = 0, sockets.length = 0, pos = 0; },
    L1 -> L2 { sync executehandler!; assign index ++, socket = -1; },
    L0 -> L1 { guard index < sockets.length; sync go?; assign socket = sockets.items[index]; },
    polling -> L0 { guard {{compInfo.guard}}; sync go?; assign {{compInfo.assign}}; };
}