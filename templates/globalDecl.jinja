// Place global declarations here.

int max_size = {{maxSize}};

typedef struct { int curr_size; int front; int rear; int items[{{max_size}}]; int id;} intq;
typedef struct { int length; int items[{{port_count}}];} socketlist;

bool isFull(intq &port)
{
    if((port.front == port.rear + 1)||(port.front == 0 && port.rear == max_size - 1))
    {
        return true;
    }
    else
    {
        return false;
    }
}

bool isEmpty(intq &port)
{
    if (port.front == -1)
    {
        return true;
    }
    else
    {
        return false;
    }
}

int push(intq &port)
{
    if (isFull(port))
    {
        return -1;
    }
    else
    {
        if (port.front == -1) port.front = 0;
        port.rear = (port.rear + 1) % max_size;
        port.items[port.rear] = 1;
        port.curr_size ++;
        return 0;
    }
}

int pop(intq &port)
{
    int element;
    if (isEmpty(port))
    {
        return -1;
    }
    else
    {
        element = port.items[port.front];
        port.curr_size --;
       if (port.front == port.rear)
        {
            port.front = -1;
            port.rear = -1;
        }
       else
        {
            port.front = (port.front + 1) % max_size;
        }
        return element;
    }
}
{% set ns=namespace(id=1) %}
{% for compName, portData in compInfo.items() %}
{% for portName, portAttr in portData.ports.items() %}
{% set ns.portNum = loop.length %}
intq {{portName}} = {0,-1,-1,{ {% for i in range(maxSize - 1) %}0,{% endfor %}0},{{ns.id}}}
{% set ns.id = ns.id + 1 %}
{% if portAttr.type == 'req' or portAttr.type == 'rep' or portAttr.type == 'qry' or portAttr.type == 'ans' %}
int {{portAttr.msg_type}}_value;
chan {{portAttr.msg_type}}_channel;
{% endif %}
{% if portAttr.type == 'timer' %}
chan {{compName}}_{{portName}}_terminate;
chan {{compName}}_{{portName}}_activate;
chan {{compName}}_{{portName}}_start;
chan {{compName}}_{{portName}}_cancel;
chan {{compName}}_{{portName}}_deactivate;
{% endif %}
{% endfor %}
socketlist {{compName}}_sockets ={0,{% for i in range(ns.portNum - 1) %}-1,{% endfor %}-1}};
int {{compName}}_socket;
{% endfor %}
urgent chan go;
urgent chan executehandler;
urgent chan handlerexit;
int identity;