// Place template instantiations here.
{% set ns=namespace(processes='') %}
{% for compName, portData in compInfo.items() %}
{{compName}}Component = {{compName}}({{compName}}_socket);
{% if loop.first %}
{% set ns.processes = compName ~ 'Component' %}
{% else %}
{% set ns.processes = ns.processes ~ ',' ~ compName ~ 'Component' %}
{% endif %}
{% for portName, portAttr in portData.ports.items() %}
{% set ns.processes = ns.processes ~ ',' ~ portName %}
{% if portAttr.type == 'sub' %}
{{portName}} = subscribe_port({{portAttr.msgtype[0]}}, {{portName}});
{% elif portAttr.type == 'rep' %}
{{portName}} = reply_port({{portAttr.msgtype[0]}}, {{portName}});
{% elif portAttr.type == 'qry' %}
{{portName}} = query_port({{portAttr.msgtype[1]}}, {{portName}});
{% elif portAttr.type == 'ans' %}
{{portName}} = query_port({{portAttr.msgtype[0]}}, {{portName}});
{% elif portAttr.type == 'tim' %}
{{portName}} = timer_port({{compName}}_{{portName}}_activate, {{compName}}_{{portName}}_deactivate, {{compName}}_{{portName}}_start, {{compName}}_{{portName}}_cancel, {{compName}}_{{portName}}_terminate, {{portName}}, {{portAttr.period}}, {% if portAttr.periodic %}true, true, true {% else %}false, false, false {% endif %},{{portAttr.period}});
{% endif %}
{% endfor %}
{{compName}}Scheduler = batchscheduler_{{compName}}({{compName}}_sockets, {{compName}}_socket);
{% set ns.processes = ns.processes ~ ',' ~ 'batchscheduler_' ~ compName %}
{% endfor %}
TransitionHelper = urgent_edge();
// List one or more processes to be composed into a system.
system {{ns.processes}},TransitionHelper;